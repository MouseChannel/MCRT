cmake_minimum_required(VERSION 3.0.0)
project(MCRT VERSION 0.1.0)
set(CMAKE_CXX_STANDARD 20)
# add_compile_options("< <<<CXX_COMPILER_ID:MSVC>:/source-charset:utf-8>")
include(cmake/FindVulkan.cmake)
include(cmake/FindGLFW.cmake)
include(cmake/FindIMGUI.cmake)
target_link_libraries(imgui glfw Vulkan)

find_program(GLSLANGV ${VULKAN_DIR}/Bin/glslangValidator.exe REQUIRED)
message(STATUS "run glslangValidator to compile shaders ...")
execute_process(COMMAND ${GLSLANGV} -V ${CMAKE_SOURCE_DIR}/Shader/vert.vert -o ${CMAKE_SOURCE_DIR}/Shader/vert.spv)
execute_process(COMMAND ${GLSLANGV} -V ${CMAKE_SOURCE_DIR}/Shader/frag.frag -o ${CMAKE_SOURCE_DIR}/Shader/frag.spv)
message(STATUS "compile shader OK")
include_directories(${PROJECT_SOURCE_DIR} ${PROJECT_SOURCE_DIR}/include)
# include(cmake/FindSrc.cmake)
file(GLOB_RECURSE SRC ${PROJECT_SOURCE_DIR}/src *.cpp)

# set(IMGUIDIR ${PROJECT_SOURCE_DIR}/lib/imgui)
add_library(src ${SRC})

# add_executable(MCRT main.cpp)
target_link_libraries(src imgui)
add_subdirectory(example)

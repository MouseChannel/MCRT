#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_debug_printf : enable
#extension GL_GOOGLE_include_directive : enable

#include "common.glsl"
#include "common.h"

layout(location = 0) rayPayloadEXT hitPayload prd;
layout(set = 0, binding = tlas) uniform accelerationStructureEXT topLevelAS;
layout(set = 0, binding = out_image, rgba32f) uniform image2D image;
layout(set = 1, binding = eGlobals) uniform _VP_Matrix
{
    VP_Matrix s;

    // mat4 c;
};
void main()
{

    // TODO: ef
    //    int s1 = gl_VertexIndex;
    uint ss = gl_LaunchIDEXT.y;

    // gl_VertexIndex;
    gl_LaunchSizeEXT.x;
    gl_RayFlagsNoneEXT;
    // debugPrintfEXT("message ");
    for (int i = 0; i < 4; i++) {
        for (int j = 0; j < 4; j++) {
            // if (a[i][j] != 0) {

            //     // debugPrintfEXT("message %d %d %d\n", a[i][j], a[i][j], a[i][j]);
            // }
        }
    }
    debugPrintfEXT("message %f %f %f\n", s.viewProj.data[0][0], s.viewProj.data[0][0], s.viewProj.data[0][0]);
    uint s = gl_LaunchSizeEXT.x;
}